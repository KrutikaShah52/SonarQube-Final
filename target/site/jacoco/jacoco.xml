<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="Jacoco-Maven-Example"><sessioninfo id="AHMCPU1013-e42fba28" start="1522393344669" dump="1522393345193"/><sessioninfo id="AHMCPU1013-a4a91f1" start="1522393356129" dump="1522393356604"/><sessioninfo id="AHMCPU1013-a17f5ecc" start="1522393364529" dump="1522393364951"/><sessioninfo id="AHMCPU1013-e52b9b70" start="1522393983155" dump="1522393983580"/><sessioninfo id="AHMCPU1013-4bbc1891" start="1522394020522" dump="1522394020982"/><sessioninfo id="AHMCPU1013-23f230d" start="1522394674055" dump="1522394674498"/><sessioninfo id="AHMCPU1013-da7d3cda" start="1522394827473" dump="1522394827993"/><sessioninfo id="AHMCPU1013-d1b92a5b" start="1522395427177" dump="1522395428009"/><package name="com/test/Jacoco_Maven_Example"><class name="com/test/Jacoco_Maven_Example/PalindromeExample"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPalindrome" desc="(Ljava/lang/String;)Z" line="6"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/test/Jacoco_Maven_Example/App"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="PalindromeExample.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="3" mb="0" cb="2"/><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="10" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="App.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="1" covered="1"/></package><counter type="INSTRUCTION" missed="7" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="1" covered="1"/></report>